name: Tests
on: [push, pull_request]
jobs:
  mysql-tests:
    name: MySQL tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: pop_test
          MYSQL_PORT: 3307
        ports:
          - 3307:3306
        # needed because the mysql container does not provide a healthcheck
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Get dependencies
        run: |
          go get -v -tags sqlite -t -d ./...
      - name: Install soda
        env:
          GO111MODULE: "off"
        run: |
          mkdir -p "$HOME/go/bin"
          go get -v -tags sqlite github.com/gobuffalo/soda
        shell: bash
      - name: Run soda
        env:
          SODA_DIALECT: "mysql"
          MYSQL_PORT: 3307
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda migrate -e $SODA_DIALECT -p ./testdata/migrations
      - name: Test
        env:
          SODA_DIALECT: "mysql"
          MYSQL_PORT: 3307
        run: |
          go test -tags sqlite -race ./...
      - name: Reset soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Run e2e
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite,e2e -race ./internal/e2e/...

  pg-tests:
    name: PostgreSQL tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Get dependencies
        run: |
          go get -v -tags sqlite -t -d ./...
      - name: Install soda
        env:
          GO111MODULE: "off"
        run: |
          mkdir -p "$HOME/go/bin"
          go get -v -tags sqlite github.com/gobuffalo/soda
        shell: bash
      - name: Run soda
        env:
          SODA_DIALECT: "postgres"
          POSTGRESQL_URL: "postgres://postgres:postgres@${{job.services.postgres.host}}:${{ job.services.postgres.ports[5432] }}/pop_test?sslmode=disable"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda migrate -e $SODA_DIALECT -p ./testdata/migrations
      - name: Test
        env:
          SODA_DIALECT: "postgres"
          POSTGRESQL_URL: "postgres://postgres:postgres@${{job.services.postgres.host}}:${{ job.services.postgres.ports[5432] }}/pop_test?sslmode=disable"
        run: |
          go test -tags sqlite -race ./...
      - name: Reset soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Run e2e
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite,e2e -race ./internal/e2e/...

  crdb-tests:
    name: Cockroach tests
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Get dependencies
        run: |
          go get -v -tags sqlite -t -d ./...
      - name: Install Cockroach
        run: |
          mkdir -p crdb
          pushd crdb
          wget -qO- https://binaries.cockroachdb.com/cockroach-v2.1.0.linux-amd64.tgz | tar  zxv
          mv cockroach-v2.1.0.linux-amd64/cockroach .
          ./cockroach start --insecure --background
          popd
      - name: Install soda
        env:
          GO111MODULE: "off"
        run: |
          mkdir -p "$HOME/go/bin"
          go get -v -tags sqlite github.com/gobuffalo/soda
        shell: bash
      - name: Run soda
        env:
          SODA_DIALECT: "cockroach"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda migrate -e $SODA_DIALECT -p ./testdata/migrations
      - name: Test
        env:
          SODA_DIALECT: "cockroach"
        run: |
          go test -tags sqlite -race ./...
      - name: Reset soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Run e2e
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite,e2e -race ./internal/e2e/...

  sqlite-tests-windows:
    name: SQLite tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - name: Install sqlite3
        run: choco install sqlite
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Get dependencies
        run: |
          go get -v -tags sqlite -t -d ./...
      - name: Install soda
        env:
          GO111MODULE: "off"
        run: |
          mkdir -p "$HOME/go/bin"
          go get -v -tags sqlite github.com/gobuffalo/soda
        shell: bash
      - name: Run soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda migrate -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Test
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite -race ./...
      - name: Reset soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Run e2e
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite,e2e -race ./internal/e2e/...

  sqlite-tests:
    name: SQLite tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Get dependencies
        run: |
          go get -v -tags sqlite -t -d ./...
      - name: Install soda
        env:
          GO111MODULE: "off"
        run: |
          mkdir -p "$HOME/go/bin"
          go get -v -tags sqlite github.com/gobuffalo/soda
        shell: bash
      - name: Run soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda migrate -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Test
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite -race ./...
      - name: Reset soda
        env:
          SODA_DIALECT: "sqlite"
        run: |
          $HOME/go/bin/soda drop -e $SODA_DIALECT -p ./testdata/migrations
          $HOME/go/bin/soda create -e $SODA_DIALECT -p ./testdata/migrations
        shell: bash
      - name: Run e2e
        env:
          SODA_DIALECT: "sqlite"
        run: |
          go test -tags sqlite,e2e -race ./internal/e2e/...
